# @generated
# run `yarn print-schema` to re-generate this file.

type Person implements Node & Actor {
  id: ID!
  name: String
  email: String
  profilePicture: Image
  location: Location
}

interface Node {
  id: ID!
}

interface Actor {
  id: ID!
  name: String
  profilePicture: Image
}

type Image {
  url: String!
}

type Location {
  id: ID!
  name: String!
}

type Organization implements Node & Actor {
  id: ID!
  name: String
  profilePicture: Image
  organizationKind: OrganizationKind
}

enum OrganizationKind {
  COMMERCIAL
  NONPROFIT
  GOVERNMENT
  JOURNALISTIC
}

type Story implements Node {
  createdAt: String!
  id: ID!
  category: Category
  title: String!
  summary: String
  updatedAt: String
  attachments: [Image]
  poster: Actor!
  thumbnail: Image
  comments(first: Int, after: String): CommentsConnection
}

enum Category {
  ALL
  EDUCATION
  NEWS
  COOKING
}

type CommentsConnection {
  edges: [CommentsConnectionEdge]
  pageInfo: PageInfo
}

type CommentsConnectionEdge {
  node: Comment
  cursor: String
}

type Comment {
  id: ID!
  text: String
}

type PageInfo {
  startCursor: String
  endCursor: String
  lastCursor: String
  hasNextPage: Boolean
  hasPreviousPage: Boolean
}

type Query {
  viewer: Viewer
  node(id: ID!): Node
  topStory(category: Category): Story
}

type Viewer {
  actor: Actor
  contacts(search: String): [Actor]
  newsfeed(first: Int, after: String): Connection
}

type Connection {
  edges: [ConnectionEdge]
  pageInfo: PageInfo
}

type ConnectionEdge {
  node: Node
  cursor: String
}
